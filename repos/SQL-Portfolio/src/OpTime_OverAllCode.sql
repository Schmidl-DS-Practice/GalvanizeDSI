--Complete Code
SELECT DISTINCT
OR_LOG.LOG_ID as OR_LOG_ID,
OR_LOG.LOG_NAME,
OR_LOG.CASE_ID as OR_CASE_ID,
OR_LOG.NUM_OF_PANELS as LOG_PANELS_NUMBER,
OR_LOG.SURGERY_DATE as SURGERY_DATE,
OR_LOG.LOC_ID,
LOC.LOC_NAME,
OR_LOG.PAT_ID,
OR_LOG.ROOM_ID,
PAT.PAT_NAME,
PAT.PAT_MRN_ID,
PROC.PROC_NAME as PROCS_DONE, 
DX.DX_NAME as LOG_DX_NAME,
CIRCULATING_TBL.LOG_PROV_NAME as CIRCULATING_RN,
SER.PROV_NAME as PRIMARY_SURGEON,
ZSER.NAME as SURGEON_SVC,
OR_IMP.IMPLANT_ID,
SUPPLY.SUPPLY_ID,
ZOS.NAME as LOG_STATUS_NAME,
ZSER.NAME as LOG_SERVICE_NAME,
SUPPLY.ACTIVE_YN as SUPPLY_ACTIVE_YN, 
TRIM(CAST(ZTYPE.NAME as VARCHAR (25))) as SUPPLY_ITEM_TYPE_NAME,
TRIM(CAST(ZORIMP.NAME as VARCHAR (50))) as IMPLANT_TYPE_NAME, 
TRIM(CAST(ZMAN.NAME as VARCHAR (50))) as SUPPLY_MANUFACTURER_NAME,
TRIM(CAST(OR_IMP.IMPLANT_NAME as VARCHAR (200))) as IMPLANT_NAME,
TRIM(CAST(SUPPLY.SUPPLY_NAME as VARCHAR (500))) as SUPPLY_NAME, 
TRIM(CAST(OR_IMP.IMPLANT_SIZE as VARCHAR (100))) as IMPLANT_SIZE,
TRIM(CAST(ZRSN.NAME as VARCHAR (30))) as SUPPLY_REASON_WASTED_NAME,
TRIM(CAST(SUPPLY.PRIMARY_EXT_ID as VARCHAR (50))) as SUPPLY_MFR_PRODUCT_NUMBER, 
TRIM(CAST(ZIMPAR.NAME as VARCHAR (20))) as IMPLANT_AREA_NAME, 
TRIM(CAST(ZORLRB.NAME as VARCHAR (10))) as IMPLANT_LRB_NAME, 
TRIM(CAST(ZIMPAC.NAME as VARCHAR (10))) as IMPLANT_ACTION_NAME,
TRIM(CAST(OR_IMP.MODEL_NUMBER as VARCHAR (50))) as IMPLANT_MFR_PRODUCT_NUM,
TRIM(CAST(OR_IMP.SERIAL_NUMBER as VARCHAR (80))) as IMPLANT_SERIAL_NUM,
TRIM(CAST(OR_IMP.LOT_NUMBER as VARCHAR (80))) as IMPLANT_LOT_NUM, 
Case When SUP_LIST.LINE is null then OR_IMP.LINE 
		Else SUP_LIST.LINE end
		as SUPPLY_LINE_NUMBER,
Case When SUP_LIST.SUPPLY_ID is null then OR_IMP.INVENTORY_ITEM_ID 
		Else SUP_LIST.SUPPLY_ID end
 		as PCK_SUPPLY_ID,
Case When OR_IMP.IMPLANT_ID is not null then TRIM(CAST('IMPLANT' as VARCHAR (10)))
		Else TRIM(CAST('SUPPLY' as VARCHAR (10))) end
		as SUPPLY_CATEGORY_NAME,
Cast(SUP_OVTM.COST_PER_UNIT_OT as DECIMAL (12,2) FORMAT 'zzzzzzzzz9.99') as SUPPLY_CURRENT_UNIT_COST, 
Case When OR_IMP.IMPLANT_ID is not null then (Case When OR_IMP.COST_PER_UNIT is not null then cast (OR_IMP.COST_PER_UNIT as DECIMAL (12,2) FORMAT 'zzzzzzzzz9.99') Else SUP_OVTM.COST_PER_UNIT_OT end)
			Else (Case When SUP_LIST.SUP_UNIT_COST is not null then CAST(SUP_LIST.SUP_UNIT_COST as DECIMAL (12,2) FORMAT 'zzzzzzzzz9.99') Else SUP_OVTM.COST_PER_UNIT_OT end) end
			as SUPPLY_LOG_UNIT_COST,				
Case When OR_IMP.IMPLANT_ID is not null then Cast (OR_IMP.IMPLANT_NUM_USED*SUPPLY_LOG_UNIT_COST as DECIMAL (12,2) FORMAT 'zzzzzzzzz9.99')
			Else Cast ((SUP_LIST.SUPPLIES_USED + SUP_LIST.SUPPLIES_WASTED) * SUPPLY_LOG_UNIT_COST as DECIMAL (12,2) FORMAT 'zzzzzzzzz9.99')  end
			as SUPPLY_LOG_NET_COST,
Case When OR_IMP.IMPLANT_ID is not null then TRIM(CAST(OR_IMP.IMPLANT_NUM_USED as INTEGER)) 
		Else TRIM(CAST(SUP_LIST.SUPPLIES_USED as INTEGER)) end
		as SUPPLY_LOG_USED_NUMBER

FROM 
OR_LOG OR_LOG
Left Join OR_CASE OR_CASE on OR_CASE.LOG_ID=OR_LOG.LOG_ID
Left Join OR_LOG_ALL_SURG PRIMARY_SURG on PRIMARY_SURG.LOG_ID=OR_LOG.LOG_ID
	and PRIMARY_SURG.PANEL='1'
	and PRIMARY_SURG.ROLE_C='1'
Left Join OR_PKLST OR_PKLST on OR_PKLST.CASE_RECORD_ID=OR_CASE.OR_CASE_ID
Left Join OR_PKLST_SUP_LIST SUP_LIST on SUP_LIST.PICK_LIST_ID=OR_PKLST.PICK_LIST_ID
Left Join OR_SPLY SUPPLY on SUPPLY.SUPPLY_ID=SUP_LIST.SUPPLY_ID
Left Join OR_SPLY_OVTM SUP_OVTM on SUP_OVTM.ITEM_ID=SUPPLY.SUPPLY_ID 
				and SUP_OVTM.EFFECTIVE_DATE = (Select MAX(MOV.EFFECTIVE_DATE)
				From OR_SPLY_OVTM MOV
				Where MOV.ITEM_ID=SUP_OVTM.ITEM_ID)
Left Join (Select Distinct OR_LOG_IMPLANTS.LOG_ID, OR_IMP.IMPLANT_ID, OR_LNLG_IMPLANTS.IMPLANT_NUM_USED, OR_LOG_LN_IMPLANT.LINE, OR_LNLG_IMPLANTS.IMPLANT_ACTION_C,
				OR_IMP.COST_PER_UNIT, OR_LOG_IMPLANTS.IMPLANT_RSN_WSTD_C, OR_LOG_IMPLANTS.IMPLANT_AREA_C, OR_LOG_IMPLANTS.IMPLANT_LATERAL_C,
				MODEL_NUMBER, SERIAL_NUMBER, LOT_NUMBER, IMPLANT_NAME, IMPLANT_SIZE, INVENTORY_ITEM_ID
				From OR_LOG_IMPLANTS
				Left Join OR_IMP on OR_IMP.IMPLANT_ID=OR_LOG_IMPLANTS.IMPLANT_ID
				Left Join OR_LNLG_IMPLANTS on OR_LOG_IMPLANTS.IMPLANT_ID=OR_LNLG_IMPLANTS.IMPLANT_ID
				Left Join OR_LOG_LN_IMPLANT on OR_LOG_LN_IMPLANT.IMPLANTS_ID=OR_LNLG_IMPLANTS.RECORD_ID) as OR_IMP
				on OR_IMP.INVENTORY_ITEM_ID=SUPPLY.SUPPLY_ID
				and OR_IMP.LOG_ID=OR_LOG.LOG_ID
Left Join (Select Distinct TRIM(CAST(OST.NAME as VARCHAR (60))) as LOG_PROV_ROLE_NAME,
							TRIM(CAST(PHYS.PROV_NAME as VARCHAR (50))) as LOG_PROV_NAME,
							LOG_STAFF.LOG_ID
							From OR_LOG_LN_STAFF LOG_STAFF
							Inner Join OR_LNLG_SURG_STAFF LNLG_STAFF
							on LOG_STAFF.STAFF_ID=LNLG_STAFF.RECORD_ID
							Inner Join CLARITY_SER PHYS
							on LNLG_STAFF.STAFF_MEMBER_ID=PHYS.PROV_ID
							Inner Join ZC_OR_STAFF_TYPE OST
							on LNLG_STAFF.STAFF_TYPE_C=OST.SURG_STAFF_REQ_C
							Where LOG_PROV_ROLE_NAME='Circulating Nurse'
							and LOG_STAFF.LINE ='1') as CIRCULATING_TBL
					on OR_LOG.LOG_ID=CIRCULATING_TBL.LOG_ID
Left Join OR_SPLY_MANFACTR ORSPMAN on (ORSPMAN.ITEM_ID=OR_IMP.INVENTORY_ITEM_ID and ORSPMAN.LINE='1') or ORSPMAN.ITEM_ID=SUPPLY.SUPPLY_ID
Left Join ZC_OR_MANUFACTURER zman on zman.MANUFACTURER_C=ORSPMAN.MANUFACTURER_C
Left Join ZC_OR_STATUS zos on OR_LOG.STATUS_C = zos.STATUS_C
Left Join ZC_OR_SERVICE zser on OR_LOG.SERVICE_C = zser.SERVICE_C
Left Join ZC_OR_TYPE_OF_ITEM ztype on ztype.TYPE_OF_ITEM_C=SUPPLY.TYPE_OF_ITEM_C 
Left Join ZC_OR_RSN_WASTE zrsn on zrsn.REASON_WASTED_C=OR_IMP.IMPLANT_RSN_WSTD_C or SUP_LIST.RSN_SUP_WASTED_C=zrsn.REASON_WASTED_C
Left Join ZC_OR_IMPLANT_TYPE zorimp on zorimp.IMPLANT_TYPE_C=SUPPLY.IMPLANT_TYPE_C
Left Join ZC_IMPLANT_AREA zimpar on zimpar.IMPLANT_AREA_C=OR_IMP.IMPLANT_AREA_C
Left Join ZC_OR_LRB zorlrb on zorlrb.LRB_C=OR_IMP.IMPLANT_LATERAL_C
Left Join ZC_IMPLANT_ACTION zimpac on zimpac.IMPLANT_ACTION_C=OR_IMP.IMPLANT_ACTION_C
Left Join CLARITY_LOC LOC on OR_LOG.LOC_ID=LOC.LOC_ID
Left Join PATIENT PAT on OR_LOG.PAT_ID=PAT.PAT_ID
Left Join CLARITY_SER SER on PRIMARY_SURG.SURG_ID=SER.PROV_ID
Left Join OR_LOG_POSTOP_DIAG POST_DIAG on POST_DIAG.LOG_ID=OR_LOG.LOG_ID
Inner Join (Select Distinct CLARITY_EDG.DX_ID, DX_NAME, CODE_LIST, EFF_END_DATE, EFF_START_DATE
					From CLARITY_EDG
					Left Join EDG_HX_ICD9_LIST
					on CLARITY_EDG.DX_ID=EDG_HX_ICD9_LIST.DX_ID) as DX
				on DX.DX_ID=POST_DIAG.POSTOP_DX_CODES_ID
Inner Join (Select Distinct OR_PROC.PROC_NAME, OR_LOG_ALL_PROC.Log_ID
					From OR_LOG_ALL_PROC
					Inner Join OR_PROC
					on OR_PROC.OR_PROC_ID=OR_LOG_ALL_PROC.OR_PROC_ID) as PROC
  				on PROC.LOG_ID=OR_LOG.Log_ID	
  				
WHERE 
ZOS.NAME not in ('canceled', 'voided')
and OR_LOG.NUM_OF_PANELS = 1
and OR_LOG.SURGERY_DATE between '2013-07-01 00:00:00' and '2013-07-05 00:00:00'
and OR_LOG.PAT_ID not in (Select PAT_ID 
			From PATIENT_TYPE 
			Where PATIENT_TYPE_C=1214);
